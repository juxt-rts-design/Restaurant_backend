name: CI/CD Pipeline

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main ]

jobs:
  test:
    runs-on: ubuntu-latest
    
    services:
      mysql:
        image: mysql:8.0
        env:
          MYSQL_ROOT_PASSWORD: root
          MYSQL_DATABASE: restauration
        ports:
          - 3306:3306
        options: --health-cmd="mysqladmin ping" --health-interval=10s --health-timeout=5s --health-retries=3

    steps:
    - uses: actions/checkout@v3
    
    - name: Setup Node.js
      uses: actions/setup-node@v5
      with:
        node-version: '18'
        cache: 'npm'
    
    - name: Install dependencies
      run: npm ci
    
    - name: Wait for MySQL
      run: |
        while ! mysqladmin ping -h"127.0.0.1" -P3306 -uroot -proot --silent; do
          sleep 1
        done
    
    - name: Setup database
      run: |
        mysql -h 127.0.0.1 -P 3306 -u root -proot restauration < database/init.sql
        mysql -h 127.0.0.1 -P 3306 -u root -proot restauration < database/gabon-data.sql
    
    - name: Run tests
      run: npm test
      env:
        DB_HOST: 127.0.0.1
        DB_USER: root
        DB_PASSWORD: root
        DB_NAME: restauration
        DB_PORT: 3306
        JWT_SECRET: test-secret
        NODE_ENV: test
    
    - name: Run API tests
      run: node test-server.js
      env:
        DB_HOST: 127.0.0.1
        DB_USER: root
        DB_PASSWORD: root
        DB_NAME: restauration
        DB_PORT: 3306
        JWT_SECRET: test-secret
        NODE_ENV: test
